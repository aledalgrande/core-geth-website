{"componentChunkName":"component---node-modules-etclabscore-gatsby-theme-pristine-src-templates-default-tsx","path":"/contribute-to-mordor-testnet","result":{"data":{"mdx":{"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"How to contribute to Mordor Testnet\"\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", null, \"How to contribute to Mordor Testnet\"), mdx(\"p\", null, mdx(\"img\", _extends({\n    parentName: \"p\"\n  }, {\n    \"src\": \"https://github.com/stevanlohja/ETC_Gifs/raw/master/mordor_testnet/mordor_logo.png?raw=true\",\n    \"alt\": \"mordor-banner\"\n  }))), mdx(\"p\", null, \"Mordor is a PoW Ethereum Classic testnet. A testnet allows developers to perform specific tests. Developers may want to test protocol changes, test a smart contract, or interact with the network in anyway that does not require real EthClassic (ETC)\\u2014just don\\u2019t test on mainnet, mainnet is for production.\"), mdx(\"h2\", null, \"Summary:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Install Core-geth \", mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://core-geth.org/install\"\n  }), \"https://core-geth.org/install\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Create an account on \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"--mordor\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Run \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"--mordor\"), \" with \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"--mine\"), \" enabled\")), mdx(\"h2\", null, \"Install Core-geth\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://core-geth.org/install\"\n  }), \"https://core-geth.org/install\"))), mdx(\"p\", null, \"Running \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"geth --help\"), \" will show a plentiful amount of usage and commands. Under \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"ETHEREUM OPTIONS:\"), \" you\\u2019ll see all the Ethereum Classic, Ethereum, and related testnet flags. We need to use the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"--mordor\"), \" flag when we rungeth.\"), mdx(\"h2\", null, \"Create an account on Mordor\"), mdx(\"p\", null, \"Mordor is a PoW testnet, so we can make an account to mine and receive testnet-ETC. Creating a new account in geth will create a public/private key pair and you\\u2019ll be prompted to create a password for that account.\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-shell\"\n  }), \"geth --mordor account new\\n\")), mdx(\"h2\", null, \"List the account(s)\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-shell\"\n  }), \"geth --mordor account list\\n\")), mdx(\"p\", null, \"You\\u2019ll notice listing the account will print the keystore file location.For example: \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"keystore:///home/USER/.ethereum/mordor/keystore/UTC...\")), mdx(\"h2\", null, \"Run Mordor with Mining Enable\"), mdx(\"p\", null, \"Run mordor testnet with mining and rpc enabled. We want to enable mining to mine testnet ETC and enable RPC to access our node.\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-shell\"\n  }), \"geth --mordor --rpc --rpcaddr \\\"localhost\\\" --rpcport 8545 --mine --minerthreads 1\\n\")), mdx(\"h2\", null, \"Check Mordor Balance on Expedition.dev\"), mdx(\"p\", null, \"So, you\\u2019re running a Mordor node and mining testnet ETC. Woohoo! An easy way to double check you\\u2019re actually growing a Mordor testnet balance is on Expedition.dev \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://expedition.dev/?network=mordor\"\n  }), \"https://expedition.dev/?network=mordor\"), \". Just search the account address you created earlier.\"), mdx(\"h2\", null, \"Add your Mordor Account to a Wallet?\"), mdx(\"p\", null, \"You can use your keystore file to import your wallet into a wallet application such as MetaMask. In MetaMask\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Select \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"localhost:8545\"), \" under network selection. This will connect the wallet to your local Mordor node.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Under your account profile select \", mdx(\"em\", {\n    parentName: \"li\"\n  }, \"import account\"), \" > \", mdx(\"em\", {\n    parentName: \"li\"\n  }, \"select type (JSON)\"), \" > \", mdx(\"em\", {\n    parentName: \"li\"\n  }, \"upload\"), \" your keystore file. You may need to enter the account password.\")), mdx(\"h2\", null, \"Tip (optional)\"), mdx(\"p\", null, \"One way to avoid typing or copy and pasting this\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-shell\"\n  }), \"geth --mordor --rpc --rpcaddr \\\"localhost\\\" --rpcport 8545 --mine --minerthreads 1\\n\")), mdx(\"p\", null, \"is creating a shell script file. \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"touch start-mordor.sh\"), \" to create the file \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"&& echo \\u201Cthe contents\\u201D\"), \" into the shell script file \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"&& chmod +x filename.sh\"), \" to add executible permissions.\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-shell\"\n  }), \"touch start-mordor.sh && echo \\\"geth --mordor --rpc --rpcaddr \\\"localhost\\\" --rpcport 8545 --mine --minerthreads 1\\\" >start-mordor.sh && chmod +x start-mordor.sh\\n\")), mdx(\"p\", null, \"Run it \"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-shell\"\n  }), \"./start-mordor.sh\\n\")), mdx(\"h2\", null, \"More Mordor Resources\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Chat Core-geth on Gitter \", mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://gitter.im/core-geth/community\"\n  }), \"https://gitter.im/core-geth/community\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Mordor block explorer: \", mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://expedition.dev/?network=mordor\"\n  }), \"https://expedition.dev/?network=mordor\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Mordor faucet: \", mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"http://mordor.canhaz.net/\"\n  }), \"http://mordor.canhaz.net/\"), \", \", mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"http://mordor.etherdrip.net\"\n  }), \"http://mordor.etherdrip.net\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Free end-point: \", mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://www.ethercluster.com/mordor\"\n  }), \"https://www.ethercluster.com/mordor\"))));\n}\n;\nMDXContent.isMDXComponent = true;","excerpt":"How to contribute to Mordor Testnet Mordor is a PoW Ethereum Classic testnet. A testnet allows developers to perform specific testsâ€¦","fields":{"slug":"/contribute-to-mordor-testnet"},"frontmatter":{"title":"How to contribute to Mordor Testnet"}}},"pageContext":{"slug":"/contribute-to-mordor-testnet"}}}